grammar org.tetrabox.minijava.xtext.MiniJava with org.eclipse.xtext.common.Terminals

generate miniJava "http://www.tetrabox.org/minijava/xtext/MiniJava"

Program:
	(classes+=Class)*
	(main=Expression)?;

Type:
	BasicType | ClassType;

BasicType:
	basic=('int' | 'boolean' | 'String');

ClassType:
	classref=[Class];

TypedElement:
	Field | Parameter;

Class:
	'class' name=ID ('extends' extends=[Class])? '{'
	(fields+=Field)*
	(methods+=Method)*
	'}';

Field:
	type=Type name=ID ';';

Parameter:
	type=Type name=ID;

Method:
	returntype=Type name=ID '(' (params+=Parameter (',' params+=Parameter)*)? ')' '{'
	body=MethodBody
	'}';

MethodBody:
	'return' expression=Expression ';';

Expression:
	TerminalExpression ({Selection.receiver=current} '.' message=Message)*;

Message:
	MethodCall | FieldSelection;

MethodCall:
	name=[Method] '(' (args+=Argument (',' args+=Argument)*)? ')';

FieldSelection:
	name=[Field];

TerminalExpression returns Expression:
	This |
	Variable |
	New |
	Cast |
	Constant |
	Paren;

This:
	variable='this';

Variable:
	paramref=[Parameter];

New:
	'new' type=ClassType '(' (args+=Argument (',' args+=Argument)*)? ')';

Cast:
	'(' type=ClassType ')' object=TerminalExpression;

Paren returns Expression:
	=>'(' Expression ')';

Constant:
	IntConstant | BoolConstant | StringConstant;

StringConstant:
	constant=STRING;

IntConstant:
	constant=INT;

BoolConstant:
	constant=('true' | 'false');

Argument:
	Expression;