/*
 * generated by Xtext
 */
package org.tetrabox.minijava.xtext.formatting;



import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.tetrabox.minijava.xtext.services.MiniJavaGrammarAccess;
import org.tetrabox.minijava.xtext.services.MiniJavaGrammarAccess.ClassElements;
import org.tetrabox.minijava.xtext.services.MiniJavaGrammarAccess.FieldElements;
import org.tetrabox.minijava.xtext.services.MiniJavaGrammarAccess.MethodCallElements;
import org.tetrabox.minijava.xtext.services.MiniJavaGrammarAccess.MethodElements;
import org.tetrabox.minijava.xtext.services.MiniJavaGrammarAccess.NewElements;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an
 * example
 */
public class MiniJavaFormatter extends AbstractDeclarativeFormatter {

	@Override
	protected void configureFormatting(FormattingConfig c) {
		MiniJavaGrammarAccess f = (MiniJavaGrammarAccess) getGrammarAccess();

		c.setAutoLinewrap(80);

		c.setSpace("    ");

		// Fields
		// add line breaks after a field declaration
		FieldElements fieldAccess = f.getFieldAccess();
		c.setLinewrap(1).after(fieldAccess.getSemicolonKeyword_2());
		// remove possible spaces before the ; ending a field declaration
		c.setNoSpace().before(fieldAccess.getSemicolonKeyword_2());

		// Methods
		MethodElements methodAccess = f.getMethodAccess();
		c.setLinewrap(1).after(methodAccess.getRightCurlyBracketKeyword_7());
		c.setNoSpace().around(methodAccess.getLeftParenthesisKeyword_2());
		c.setNoSpace().before(methodAccess.getRightParenthesisKeyword_4());

		c.setNoSpace().before(methodAccess.getCommaKeyword_3_1_0());
		c.setNoSpace().around(f.getExpressionAccess().getFullStopKeyword_1_1());
		c.setNoSpace().before(f.getMethodBodyAccess().getSemicolonKeyword_2());

		// Method and constructor invocations
		NewElements newAccess = f.getNewAccess();
		c.setNoSpace().before(newAccess.getCommaKeyword_3_1_0());
		c.setNoSpace().around(newAccess.getLeftParenthesisKeyword_2());
		c.setNoSpace().before(newAccess.getRightParenthesisKeyword_4());
		MethodCallElements methodCallAccess = f.getMethodCallAccess();
		c.setNoSpace().before(methodCallAccess.getCommaKeyword_2_1_0());
		c.setNoSpace().around(methodCallAccess.getLeftParenthesisKeyword_1());
		c.setNoSpace().before(methodCallAccess.getRightParenthesisKeyword_3());

		// indentations for { } of classes
		ClassElements classAccess = f.getClassAccess();
		c.setIndentation(classAccess.getLeftCurlyBracketKeyword_3(),
				classAccess.getRightCurlyBracketKeyword_6());
		c.setLinewrap().after(classAccess.getLeftCurlyBracketKeyword_3());
		c.setLinewrap(2).after(classAccess.getRightCurlyBracketKeyword_6());
	}
}
